diff -r 02d1fc92d4c2 src/applications/onoff/onoff-application.cc
--- a/src/applications/onoff/onoff-application.cc	Fri Apr 09 13:05:34 2010 +0200
+++ b/src/applications/onoff/onoff-application.cc	Wed Apr 28 12:43:19 2010 +0200
@@ -36,6 +36,7 @@
 #include "ns3/trace-source-accessor.h"
 #include "onoff-application.h"
 #include "ns3/udp-socket-factory.h"
+#include "ns3/qos-tag.h"
 
 NS_LOG_COMPONENT_DEFINE ("OnOffApplication");
 
@@ -71,6 +72,15 @@
                    RandomVariableValue (ConstantVariable (1.0)),
                    MakeRandomVariableAccessor (&OnOffApplication::m_offTime),
                    MakeRandomVariableChecker ())
+    .AddAttribute ("QosTid", "Set QoS traffic identifier (0-7). Possible values are:"
+                   "0   = AC_BE (Best Effort); "
+                   "1,2 = AC_BK (Background); "
+                   "3   = AC_BE_NQOS (Best Effort no QoS?); " 
+                   "4,5 = AC_VI (Video first); "
+                   "6,7 = AC_VO (Voice first)",
+                   UintegerValue (0),
+                   MakeUintegerAccessor (&OnOffApplication::m_qosTid),
+                   MakeUintegerChecker<uint8_t> ())
     .AddAttribute ("MaxBytes", 
                    "The total number of bytes to send. Once these bytes are sent, "
                    "no packet is sent again, even in on state. The value zero means "
@@ -235,6 +245,11 @@
   NS_LOG_LOGIC ("sending packet at " << Simulator::Now());
   NS_ASSERT (m_sendEvent.IsExpired ());
   Ptr<Packet> packet = Create<Packet> (m_pktSize);
+  if (m_qosTid != 0) {
+    QosTag qosTag;
+    qosTag.SetTid (m_qosTid);
+    packet->AddPacketTag (qosTag);
+  }
   m_txTrace (packet);
   m_socket->Send (packet);
   m_totBytes += m_pktSize;
